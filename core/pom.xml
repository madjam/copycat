<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.onosproject</groupId>
    <artifactId>copycat-parent</artifactId>
    <version>0.5.0.onos12-SNAPSHOT</version>
  </parent>

  <artifactId>copycat-core</artifactId>
  <name>Copycat Core</name>

  <properties>
    <kryo.version>3.0.0</kryo.version>
    <guava.version>18.0</guava.version>
    <config.version>1.2.1</config.version>
  </properties>

  <dependencies>
    <dependency>
      <groupId>com.esotericsoftware</groupId>
      <artifactId>kryo</artifactId>
      <version>${kryo.version}</version>
    </dependency>
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
      <version>${guava.version}</version>
    </dependency>
    <dependency>
      <groupId>com.typesafe</groupId>
      <artifactId>config</artifactId>
      <version>${config.version}</version>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <!-- This plugin forces the generation of jar containing streaming test classes, so that the tests 
        classes of external modules can use them. The two execution profiles are necessary - first one for 'mvn 
        package', second one for 'mvn test-compile'. Ideally, 'mvn compile' should not compile test classes and 
        therefore should not need this. However, an open Maven bug (http://jira.codehaus.org/browse/MNG-3559) 
        causes the compilation to fail if streaming test-jar is not generated. Hence, the second execution profile 
        for 'mvn test-compile'. -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>test-jar</goal>
            </goals>
          </execution>
          <execution>
            <id>test-jar-on-test-compile</id>
            <phase>test-compile</phase>
            <goals>
              <goal>test-jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
